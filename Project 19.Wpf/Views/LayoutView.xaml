<views:View x:Class="Project_19.Views.LayoutView"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:sys="clr-namespace:System;assembly=mscorlib"
            xmlns:views="clr-namespace:Project_19.Views" mc:Ignorable="d"
            WindowState="Normal" WindowStyle="None" ResizeMode="CanResize"
            MinHeight="305" MinWidth="445" Height="570" Width="800"
            AllowsTransparency="true" Background="{x:Null}"
            Icon="Resources/favicon.ico" Title="Phonebook"
            SourceInitialized="OnSourceInitialized"
            WindowStartupLocation="CenterScreen"
            SizeChanged="OnSizeChanged"
            Closing="OnClosing">

    <views:View.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/ViewTemplate.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </views:View.Resources>

    <Grid>
        <Grid.Resources>
            <sys:Double x:Key="Rounding">20</sys:Double>
            <sys:Double x:Key="TitleSpacing">7</sys:Double>
            <sys:Double x:Key="RoundingSpacingStep">0.5</sys:Double>
            <sys:Double x:Key="Thickness">3</sys:Double>
            <sys:Double x:Key="Opacity">0</sys:Double>
            <views:BooleanInverter x:Key="BooleanInverter"/>
            <views:DoubleSumConverter x:Key="SumConverter"/>
            <views:DoubleMltConverter x:Key="MltConverter"/>
            <views:DoubleSpacingConverter x:Key="SpacingConverter" Step="{StaticResource RoundingSpacingStep}"/>
            <CornerRadius x:Key="CornerTopRadius"
                          BottomLeft="0" BottomRight="0" 
                          TopLeft="{StaticResource Rounding}" 
                          TopRight="{StaticResource Rounding}"/>
            <CornerRadius x:Key="CornerBottomRadius"
                          TopLeft="0" TopRight="0"
                          BottomLeft="{StaticResource Rounding}" 
                          BottomRight="{StaticResource Rounding}"/>
            <Thickness x:Key="ThicknessMargin" 
                       Top="{StaticResource Thickness}" Bottom="{StaticResource Thickness}" 
                       Left="{StaticResource Thickness}" Right="{StaticResource Thickness}"/>
            <Style x:Key="AutoHiddenElement" TargetType="{x:Type FrameworkElement}">
                <Setter Property="IsEnabled" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:View}}, 
                        Path=Fullscreen, Converter={StaticResource BooleanInverter}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False"><Setter Property="Visibility" Value="Hidden"/></Trigger>
                    <Trigger Property="IsEnabled" Value="True"><Setter Property="Visibility" Value="Visible"/></Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="AutoMarginElement" BasedOn="{StaticResource AutoHiddenElement}" TargetType="{x:Type FrameworkElement}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False"><Setter Property="Margin" Value="7"/></Trigger>
                    <Trigger Property="IsEnabled" Value="True"><Setter Property="Margin" Value="0"/></Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="AutoRoundedTopBorder" TargetType="{x:Type Border}">
                <Setter Property="Background" Value="{StaticResource BBgLight}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="IsHitTestVisible" Value="False"/>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="True"><Setter Property="CornerRadius" Value="{StaticResource CornerTopRadius}"/></Trigger>
                    <Trigger Property="IsEnabled" Value="False"><Setter Property="CornerRadius" Value="0"/></Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="AutoRoundedBottomBorder" TargetType="{x:Type Border}">
                <Setter Property="Background" Value="{StaticResource BBgLight}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="IsHitTestVisible" Value="False"/>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="True">
                        <Setter Property="CornerRadius" Value="{StaticResource CornerBottomRadius}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="CornerRadius" Value="0"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="AutoWidthElement" TargetType="{x:Type FrameworkElement}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="false"><Setter Property="Width" Value="{StaticResource TitleSpacing}"/></Trigger>
                    <Trigger Property="IsEnabled" Value="true"><Setter Property="Width" Value="{Binding Source={StaticResource Rounding}, 
                        Converter={StaticResource SpacingConverter}, ConverterParameter={StaticResource TitleSpacing}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ViewGrid" TargetType="{x:Type Grid}">
                <Setter Property="Margin" Value="{Binding ElementName=AutoMarginGrid, Path=Margin}"/>
                <Setter Property="Background" Value="{StaticResource BTransparent}"/>
            </Style>
            <Style x:Key="ResizingGrid" BasedOn="{StaticResource AutoHiddenElement}" TargetType="{x:Type Grid}">
                <Setter Property="Margin" Value="{StaticResource ThicknessMargin}"/>
                <Setter Property="Opacity" Value="{StaticResource Opacity}"/>
            </Style>
        </Grid.Resources>
        <!--AUTOMARGIN-->
        <Grid x:Name="AutoMarginGrid" Style="{StaticResource AutoMarginElement}"/>
        <!--VIEW-->
        <Grid x:Name="ViewGrid" Style="{StaticResource ViewGrid}">
            <Grid.RowDefinitions>
                <RowDefinition Height="20"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>
            <!--Control-->
            <Grid Grid.Row="0">
                <!---->
                <Grid Style="{StaticResource AutoHiddenElement}">
                    <Border x:Name="TopMask" Focusable="False" Style="{StaticResource AutoRoundedTopBorder}"/>
                </Grid>
                <!---->
                <Grid x:Name="ControlContainer" Background="{StaticResource BBgPrimary}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.OpacityMask><VisualBrush Visual="{Binding ElementName=TopMask}"/></Grid.OpacityMask>
                    <Grid x:Name="AutoWidthContainer" Grid.Column="0" Style="{StaticResource AutoHiddenElement}">
                        <Grid x:Name="Spacing" Style="{StaticResource AutoWidthElement}"
                              PreviewMouseLeftButtonDown="Drag" IsHitTestVisible="True" Background="{StaticResource BTransparent}"/>
                    </Grid>
                    <ContentControl x:Name="ControlTemplate" Grid.Column="1" Focusable="False" Template="{StaticResource ControlTemplate}"/>
                </Grid>
            </Grid>
            <!--Content-->
            <Grid Grid.Row="1" ClipToBounds="True">
                <Grid.Resources>
                    <Style x:Key="FrameContainer" TargetType="{x:Type Frame}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=views:View}, Path=IsLocked}" Value="True">
                                <DataTrigger.Setters><Setter Property="IsHitTestVisible" Value="False"/></DataTrigger.Setters>
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard TargetProperty="Opacity">
                                            <DoubleAnimationUsingKeyFrames Duration="0:0:0.4">
                                                <LinearDoubleKeyFrame KeyTime="65%" Value="1"></LinearDoubleKeyFrame>
                                                <LinearDoubleKeyFrame KeyTime="99%" Value="0.5"></LinearDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard TargetProperty="Opacity">
                                            <DoubleAnimationUsingKeyFrames Duration="0:0:0.1">
                                                <LinearDoubleKeyFrame KeyTime="99%" Value="1"></LinearDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Margin" Value="50 15 50 0"/>
                        <Setter Property="NavigationUIVisibility" Value="Hidden"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="IsHitTestVisible" Value="True"/>
                        <Setter Property="Focusable" Value="True"/>
                        <Setter Property="Opacity" Value="1"/>
                    </Style>
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Height="150"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="80"/>
                </Grid.RowDefinitions>  
                <!--Body-->
                <Grid x:Name="BodyContainer" Grid.Row="1" PreviewMouseLeftButtonDown="ResetMenu" PreviewMouseRightButtonDown="ResetMenu" Background="{StaticResource BBgLight}" >
                    <Frame x:Name="BodyFrame" Style="{StaticResource FrameContainer}" Content="{Binding Path = Content.View}"/>
                </Grid>
                <!--Social-->
                <Grid x:Name="SocialBarContainer" PreviewMouseLeftButtonDown="ResetMenu" PreviewMouseRightButtonDown="ResetMenu" Grid.Row="2" Background="{StaticResource BBgLight}">
                    <ContentControl x:Name="SocialBarTemplate" Focusable="False" Template="{StaticResource SocialBarTemplate}"/>
                </Grid>
                <!--Header-->
                <Grid x:Name="HeaderContainer" Grid.Row="0" Background="{StaticResource BBgDark}">
                    <ContentControl x:Name="HeaderTemplate" Focusable="False" Template="{StaticResource HeaderTemplate}"/>
                </Grid>
            </Grid>
            <!--Footer-->
            <Grid Grid.Row="2" PreviewMouseLeftButtonDown="ResetMenu" PreviewMouseRightButtonDown="ResetMenu">
                <!---->
                <Grid Style="{StaticResource AutoHiddenElement}">
                    <Border x:Name="BottomMask" Focusable="False" Style="{StaticResource AutoRoundedBottomBorder}"/>
                </Grid>
                <!---->
                <Grid x:Name="FooterContainer" Background="{StaticResource BBgPrimary}">
                    <Grid.OpacityMask><VisualBrush Visual="{Binding ElementName=BottomMask}"/></Grid.OpacityMask>
                    <ContentControl x:Name="FooterTemplate" Focusable="False" Template="{StaticResource FooterTemplate}"/>
                </Grid>
            </Grid>
        </Grid>
        <!--RESIZING-->
        <Grid x:Name="ResizingGrid" Style="{StaticResource ResizingGrid}">
            <Grid.Resources>
                <sys:Double x:Key="OppositeRounding">50</sys:Double>
                <CornerRadius x:Key="RadiusNw" BottomRight="{StaticResource Rounding}" TopLeft="{StaticResource OppositeRounding}"/>
                <CornerRadius x:Key="RadiusNe" BottomLeft="{StaticResource Rounding}" TopRight="{StaticResource OppositeRounding}"/>
                <CornerRadius x:Key="RadiusSe" TopLeft="{StaticResource Rounding}" BottomRight="{StaticResource OppositeRounding}"/>
                <CornerRadius x:Key="RadiusSw" TopRight="{StaticResource Rounding}" BottomLeft="{StaticResource OppositeRounding}"/>
                <Thickness x:Key="MarginNs" Right="{StaticResource Rounding}" Left="{StaticResource Rounding}" />
                <Thickness x:Key="MarginEw" Bottom="{StaticResource Rounding}" Top="{StaticResource Rounding}"/>
                <Style x:Key="RectangleTool" TargetType="{x:Type Rectangle}">
                    <Setter Property="Fill" Value="{StaticResource BToolA}"/>
                    <Setter Property="Focusable" Value="False"/>
                    <Setter Property="RenderTransform">
                        <Setter.Value><TransformGroup><RotateTransform Angle="-180"/></TransformGroup></Setter.Value>
                    </Setter>
                </Style>
                <Style x:Key="BorderTool" TargetType="{x:Type Border}">
                    <Setter Property="Focusable" Value="False"/>
                    <Setter Property="IsHitTestVisible" Value="True"/>
                    <Setter Property="Background" Value="{StaticResource BToolB}"/>
                    <Setter Property="Height" Value="{Binding Source={StaticResource Rounding}, Converter={StaticResource SumConverter}, 
                        ConverterParameter={StaticResource Thickness}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <Setter Property="Width" Value="{Binding Source={StaticResource Rounding}, Converter={StaticResource SumConverter}, 
                        ConverterParameter={StaticResource Thickness}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                </Style>
            </Grid.Resources>
            <!--Top(N)-->
            <Rectangle x:Name="ResizeN" Cursor="SizeNS" Style="{StaticResource RectangleTool}" VerticalAlignment="Top" RenderTransformOrigin="0.5,0"
                       Height="{StaticResource Thickness}" Margin="{StaticResource MarginNs}" PreviewMouseLeftButtonDown="Resize"/>
            <!--Right(E)-->
            <Rectangle x:Name="ResizeE" Cursor="SizeWE" Style="{StaticResource RectangleTool}"  HorizontalAlignment="Right" RenderTransformOrigin="1,0.5"
                       Width="{StaticResource Thickness}" Margin="{StaticResource MarginEw}" PreviewMouseLeftButtonDown="Resize"/>
            <!--Bottom(S)-->
            <Rectangle x:Name="ResizeS" Cursor="SizeNS" Style="{StaticResource RectangleTool}" VerticalAlignment="Bottom" RenderTransformOrigin="0.5,1"
                       Height="{StaticResource Thickness}" Margin="{StaticResource MarginNs}" PreviewMouseLeftButtonDown="Resize"/>
            <!--Left(W)-->
            <Rectangle x:Name="ResizeW" Cursor="SizeWE" Style="{StaticResource RectangleTool}" HorizontalAlignment="Left" RenderTransformOrigin="0,0.5"
                       Width="{StaticResource Thickness}" Margin="{StaticResource MarginEw}" PreviewMouseLeftButtonDown="Resize"/>
            <!--TopLeft(Nw)-->
            <Border x:Name="ResizeNwBorder" Style="{StaticResource BorderTool}" 
                    CornerRadius="{StaticResource RadiusNw}" HorizontalAlignment="Left" VerticalAlignment="Top">
                <Border.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="-1" ScaleY="-1"
                                        CenterX="{Binding Source={StaticResource Rounding}, Converter={StaticResource MltConverter}, 
                                            ConverterParameter=0.5, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                        CenterY="{Binding Source={StaticResource Rounding}, Converter={StaticResource MltConverter}, 
                                            ConverterParameter=0.5,Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </TransformGroup>
                </Border.RenderTransform>
                <Rectangle x:Name="ResizeNw" Cursor="SizeNWSE" Fill="Transparent" PreviewMouseLeftButtonDown="Resize">
                        <Rectangle.OpacityMask><VisualBrush Visual="{Binding ElementName=ResizeNwBorder}"/></Rectangle.OpacityMask>
                    </Rectangle>
                </Border>
            <!--TopRight(Ne)-->
            <!--<Border x:Name="ResizeNeBorder" Style="{StaticResource BorderTool}" RenderTransformOrigin="1,0"
                    CornerRadius="{StaticResource RadiusNe}" HorizontalAlignment="Right" VerticalAlignment="Top">
                <Border.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="-1" ScaleY="-1"
                                        CenterX="{Binding Source={StaticResource Rounding}, Converter={StaticResource MltConverter}, 
                                            ConverterParameter=-0.5, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                        CenterY="{Binding Source={StaticResource Rounding}, Converter={StaticResource MltConverter}, 
                                            ConverterParameter=0.5, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </TransformGroup>
                </Border.RenderTransform>
                    <Rectangle x:Name="ResizeNe" Cursor="SizeNESW" Fill="Transparent" PreviewMouseLeftButtonDown="Resize">
                        <Rectangle.OpacityMask><VisualBrush Visual="{Binding ElementName=ResizeNeBorder}"/></Rectangle.OpacityMask>
                    </Rectangle>
            </Border>-->
            <!--BottomRight(Se)-->
            <Border x:Name="ResizeSeBorder" Style="{StaticResource BorderTool}" RenderTransformOrigin="1,1"
                    CornerRadius="{StaticResource RadiusSe}" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                <Border.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="-1" ScaleY="-1"
                                        CenterX="{Binding Source={StaticResource Rounding}, Converter={StaticResource MltConverter}, 
                                            ConverterParameter=-0.5, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                        CenterY="{Binding Source={StaticResource Rounding}, Converter={StaticResource MltConverter}, 
                                            ConverterParameter=-0.5,Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </TransformGroup>
                </Border.RenderTransform>
                <Rectangle x:Name="ResizeSe" Cursor="SizeNWSE" Fill="Transparent" PreviewMouseLeftButtonDown="Resize">
                    <Rectangle.OpacityMask><VisualBrush Visual="{Binding ElementName=ResizeSeBorder}"/></Rectangle.OpacityMask>
                </Rectangle>
            </Border>
            <!--BottomLeft(Sw)-->
            <Border x:Name="ResizeSwBorder" Style="{StaticResource BorderTool}" RenderTransformOrigin="0,1"
                    CornerRadius="{StaticResource RadiusSw}" HorizontalAlignment="Left" VerticalAlignment="Bottom">
               <Border.RenderTransform>
                   <TransformGroup>
                       <ScaleTransform ScaleX="-1" ScaleY="-1"
                                       CenterX="{Binding Source={StaticResource Rounding}, Converter={StaticResource MltConverter}, 
                                           ConverterParameter=0.5, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                       CenterY="{Binding Source={StaticResource Rounding}, Converter={StaticResource MltConverter}, 
                                           ConverterParameter=-0.5, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                   </TransformGroup>
               </Border.RenderTransform>
                <Rectangle x:Name="ResizeSw" Cursor="SizeNESW" Fill="Transparent" PreviewMouseLeftButtonDown="Resize">
                   <Rectangle.OpacityMask><VisualBrush Visual="{Binding ElementName=ResizeSeBorder}"/></Rectangle.OpacityMask>
               </Rectangle>
           </Border>
        </Grid>
    </Grid>

</views:View>